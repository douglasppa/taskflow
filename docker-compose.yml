version: '3.9'

services:
  web:
    build: .
    container_name: fastapi_app
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - mongodb
      - rabbitmq

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:6
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # painel web
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  celery:
    build: .
    container_name: celery_worker
    command: celery -A app.workers.worker worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - rabbitmq

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
      
  alembic:
    build: .
    container_name: alembic_migrator
    command: alembic upgrade head
    depends_on:
      - postgres
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - POSTGRES_USER=taskflow
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=taskflow_db
      - POSTGRES_HOST=postgres

volumes:
  pgdata:
  mongodata: