services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REQUIREMENTS: backend/dev-requirements.txt
    container_name: fastapi_app
    volumes:
      - ./backend:/app
      - ./VERSION:/app/VERSION
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - mongodb
      - rabbitmq
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery:
    build:
      context: .
    container_name: celery_worker
    command: celery -A app.workers.celery_app worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - web
      - rabbitmq
      - mongodb
    env_file:
      - .env

  alembic:
    build:
      context: .
    container_name: alembic_migrator
    command: alembic upgrade head
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    working_dir: /app
    env_file:
      - .env

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      - postgres

  mongodb:
    image: mongo:6
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  mongodb_exporter:
    image: percona/mongodb_exporter:0.40.0
    container_name: mongodb_exporter
    ports:
      - "9216:9216"
    environment:
      MONGODB_URI: "mongodb://mongo_db:27017"
    depends_on:
      - mongodb

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
      RABBITMQ_PROMETHEUS: "true"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=30d"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

volumes:
  pgdata:
  mongodata:
  grafana_data:
  prometheus_data: