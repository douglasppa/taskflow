name: CI

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint 🧹
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Run linters
        run: |
          ruff check .
          black --check .

  test:
    name: Test 🧪
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: taskflow_user
          POSTGRES_PASSWORD: taskflow_pass
          POSTGRES_DB: taskflow_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongo:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_USER: taskflow_user
      POSTGRES_PASSWORD: taskflow_pass
      POSTGRES_DB: taskflow_db
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

      MONGO_URL: mongodb://localhost:27017
      MONGO_DB_NAME: taskflow

      RABBITMQ_URL: amqp://guest:guest@localhost:5672//
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest

      SECRET_KEY: changeme
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      PROMETHEUS_PORT: 9000

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Run tests and generate coverage
        run: |
          pytest --cov=app --cov-config=.coveragerc --cov-report=xml --cov-report=term
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  sonarcloud:
    name: SonarCloud 🔍
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=douglasppa_taskflow
            -Dsonar.organization=douglasppa
            -Dsonar.sources=app
            -Dsonar.tests=tests
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.coverage.inclusions=app/**
            -Dsonar.coverage.exclusions=tests/**
            -Dsonar.projectBaseDir=.
            -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
